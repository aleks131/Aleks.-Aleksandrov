name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically detect the static site generator being used
          static_site_generator: next
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npm run build
        env:
          NEXT_PUBLIC_BASE_PATH: /Aleks.-Aleksandrov
      - name: Create important files for GitHub Pages
        run: |
          # Create .nojekyll file
          touch ./out/.nojekyll
          
          # Copy special files from public to out
          if [ -f ./public/404.html ]; then
            cp ./public/404.html ./out/404.html
            echo "Copied 404.html from public directory"
          else
            # Create a basic 404.html if it doesn't exist
            cat > ./out/404.html << 'EOL'
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="utf-8">
              <title>Page Not Found</title>
              <script>
                // Redirect to the main page
                window.location.replace("/Aleks.-Aleksandrov/");
              </script>
              <style>
                body { font-family: sans-serif; text-align: center; padding: 50px; }
              </style>
            </head>
            <body>
              <h1>Page Not Found</h1>
              <p>Redirecting to home page...</p>
            </body>
            </html>
            EOL
            echo "Created basic 404.html"
          fi
          
          # Copy redirect.html if it exists
          if [ -f ./public/redirect.html ]; then
            cp ./public/redirect.html ./out/redirect.html
            echo "Copied redirect.html from public directory"
          fi
          
          # Copy index-redirect.html to the root directory (outside of base path)
          if [ -f ./public/index-redirect.html ]; then
            cp ./public/index-redirect.html ./out/index.html
            echo "Copied index-redirect.html to out/index.html"
          fi
          
          # Create a copy of index.html at the root to handle GitHub Pages default routing
          if [ -f ./out/index.html ]; then
            cp ./out/index.html ./out/Aleks.-Aleksandrov.html
            echo "Created Aleks.-Aleksandrov.html as fallback"
          fi
          
          echo "Files in out directory:"
          ls -la ./out/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 